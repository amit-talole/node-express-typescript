
name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
  AWS_REGION: ap-south-1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set Ip env variable
      run: echo SERVER_PUBLIC_ID 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nodejs
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

   - name: Deploy to Amazon EC2
     env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nodejs
        IMAGE_TAG: ${{ github.sha }}
        AWS_DEFAULT_REGION: ap-south-1
      uses: aws-actions/configure-aws-credentials@v1
      with: 
       # host: ${{env.SERVER_PUBLIC_IP}}
       username: ubuntu
       key: ${{env.PRIVATE_SSH_KEY}}
       envs: PRIVATE_SSH_KEY,ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
       scripts: |-
         sudo apt update
         sudo apt install docker.io -y
         sudo apt install awscli -y
         sudo $(aws ecr get-login --no-include-email --region ap-south-1) 
         sudo docker stop myappcontainer || true
         sudo docker rm myappcontainer || true
         sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         sudo docker run --d --name myappcontainer -p 80:3000 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


